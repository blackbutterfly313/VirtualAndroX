name: ‚ö° Native Build (No Docker)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: üöÄ Checkout code
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: üì¶ Install Buildozer
      run: |
        pip install buildozer==1.5.0
        pip install cython==0.29.33

    - name: üîß Install Android SDK
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        mkdir -p cmdline-tools
        unzip -q cmdline-tools.zip -d cmdline-tools
        mkdir -p android-sdk/cmdline-tools/latest
        mv cmdline-tools/cmdline-tools/* android-sdk/cmdline-tools/latest/
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools

    - name: ‚úÖ Accept Android Licenses
      run: |
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin
        yes | sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" --sdk_root=$ANDROID_SDK_ROOT

    - name: üèóÔ∏è Build APK
      run: |
        export ANDROID_SDK_ROOT=$PWD/android-sdk
        export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
        buildozer android debug

    - name: üì§ Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: VirtualAndroX-Native
        path: bin/*.apk
